server:
  port: 9527
spring:
  application:
    name: cloud-gateway-service
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true #开启从注册中心动态创建路由的功能，利用微服务名进行路由
      routes:
        - id: payment_route #路由的id，没有固定的规则，但要求唯一，建议配合服务名
          #uri: http://localhost:8001 #匹配后提供服务的路由地址
          uri: lb://CLOUD-PAYMENT-SERVICE #匹配后提供服务的路由地址
          predicates:
            - Path=/payment/get/**  #断言，路径型匹配的进行路由
        - id: payment_route2 #路由的id，没有固定的规则，但要求唯一，建议配合服务名
          #uri: http://localhost:8001 #匹配后提供服务的路由地址
          uri: lb://CLOUD-PAYMENT-SERVICE #匹配后提供服务的路由地址
          filter:
            - AddRequestParameter=X-Request-Id,1024 #过滤器工厂会在请求头加上一对请求头，名称为X-Request-Id，值为1024
          predicates:
            - Path=/payment/getBalancer/** #断言，路径型匹配的进行路由
            - After=2020-05-25T14:24:12.533+08:00[Asia/Shanghai] #时间之后
#            - Before=2020-05-25T14:24:12.533+08:00[Asia/Shanghai] #时间之前
#            - Between=2020-05-25T14:24:12.533+08:00[Asia/Shanghai],2020-05-25T15:24:12.533+08:00[Asia/Shanghai] #时间之间
#            - Cookie=username,uuu #
#            - Header=X-Request-Id,\d+ #请求头要有"X-request-Id"属性，并且值为整数的正则表达式
#            - Host=**.com
#            - Method=GET
#            - Query=username,\d+ #要有参数名username并且值还要是整数

eureka:
  instance:
    instance-id: cloud-gateway-service
  client:
    fetch-registry: true  #表示是否从EurekaServer抓取已有的注册服务，默认为true，单节点无所谓，集群必须设置为true才能配合ribbon使用负载均衡
    register-with-eureka: true #true表示自己将注册进EurekaServer 默认为true
    service-url:
      defaultZone: http://localhost:7001/eureka/  #单机版